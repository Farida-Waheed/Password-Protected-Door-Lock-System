C51 COMPILER V9.60.7.0   MAIN                                                              12/20/2024 16:53:10 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\College\APP\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg51.h>
   2          #include "LCD.h"
   3          #include "DC_Motor.h"
   4          #include "delay.h"
   5          #include "UART.h"
   6          #include "button.h"
   7          #include "leds.h"
   8          
   9          unsigned char AC_button_count = 0;
  10          unsigned char Light_button_count = 0;
  11          
  12          void Lcd_SmartFeatures(void);
  13          void Lcd_HomeScreen(void);
  14          
  15          void main(void) {
  16   1          unsigned char Button_Read;
  17   1          unsigned char received_byte ; 
  18   1        
  19   1          uart_Init();
  20   1          LCD_init();
  21   1          Dc_Motor_Init();
  22   1          WHITE_ledStatus(LED_OFF);
  23   1          BLUE_ledStatus(LED_OFF);
  24   1          YELLOW_ledStatus(LED_OFF);
  25   1          ORANGE_ledStatus(LED_OFF);
  26   1      
  27   1          Lcd_HomeScreen();
  28   1      
  29   1          while (1) {
  30   2              received_byte = uart_Receivebyte() ;
  31   2      
  32   2              if (received_byte == 'S') {
  33   3                  Lcd_SmartFeatures();
  34   3                  while (received_byte == 'S') {
  35   4                      // AC Button Handling
  36   4                      if (AC_button == 0) {  // Check if AC button is pressed (active low)
  37   5                          delay_ms(30);  
  38   5      
  39   5                          if ((AC_button) == 0) {
  40   6                              AC_button_count++;
  41   6                              if (AC_button_count == 1) {
  42   7                                  LCD_moveCursor(0, 10);
  43   7                                  LCD_displayString("ON ");
  44   7                                  Dc_Motor_Rotate(ROTATE_RIGHT);
  45   7                                  delay_ms(1000);
  46   7                              } else if (AC_button_count == 2) {
  47   7                                  AC_button_count = 0;
  48   7                                  LCD_moveCursor(0, 10);
  49   7                                  LCD_displayString("OFF");
  50   7                                  Dc_Motor_Rotate(ROTATE_STOP);
  51   7                                  delay_ms(1000);
  52   7                              }
  53   6                              while ((AC_button) == 0);  // Wait for button release
  54   6                          }
C51 COMPILER V9.60.7.0   MAIN                                                              12/20/2024 16:53:10 PAGE 2   

  55   5                      }
  56   4      
  57   4                      // Light Button Handling
  58   4                      if ((Light_button) == 0) {  // Check if Light button is pressed (active low)
  59   5                          delay_ms(30);  // Debounce delay
  60   5      
  61   5                          if ((Light_button) == 0) {
  62   6                              Light_button_count++;
  63   6                              if (Light_button_count == 1) {
  64   7                                  LCD_moveCursor(1, 14);
  65   7                                  LCD_displayString("M1 ");
  66   7                                  P0 = P0 & ~(1<<2);  // Set the LEDs for Mode 1
  67   7                                  delay_ms(500);
  68   7                              } else if (Light_button_count == 2) {
  69   7                                  LCD_moveCursor(1, 14);
  70   7                                  LCD_displayString("M2 ");
  71   7                                  P0 = P0 & ~(1<<3);  // Set the LEDs for Mode 2
  72   7                                  delay_ms(500);
  73   7                              } else if (Light_button_count == 3) {
  74   7                                  LCD_moveCursor(1, 14);
  75   7                                  LCD_displayString("M3 ");
  76   7                                  P0 = P0 & ~(1<<4);  // Set the LEDs for Mode 3
  77   7                                  delay_ms(500);
  78   7                              } else if (Light_button_count == 4) {
  79   7                                  LCD_moveCursor(1, 14);
  80   7                                  LCD_displayString("M4 ");
  81   7                                  P0 = P0 & ~(1<<5);  // Set the LEDs for Mode 4
  82   7                                  delay_ms(500);
  83   7                              } else if (Light_button_count == 5) {
  84   7                                  Light_button_count = 0;
  85   7                                  LCD_moveCursor(1, 13);
  86   7                                  LCD_displayString("OFF");
  87   7                                  P0 = P0 | (15<<2); 
  88   7                                  delay_ms(500);
  89   7                              }
  90   6                              while ((Light_button) == 0);  // Wait for button release
  91   6                          }
  92   5                      }
  93   4                  }
  94   3              }
  95   2              if (received_byte != 'S') {
  96   3                  Lcd_HomeScreen();
  97   3              }
  98   2          }
  99   1      }
*** WARNING C280 IN LINE 16 OF main.c: 'Button_Read': unreferenced local variable
 100          
 101          void Lcd_SmartFeatures(void) {
 102   1          LCD_moveCursor(0, 0);
 103   1          LCD_displayString("AC Status:   ");
 104   1          LCD_moveCursor(1, 0);
 105   1          LCD_displayString("Light Status:   ");
 106   1      }
 107          
 108          void Lcd_HomeScreen(void) {
 109   1          LCD_clearScreen();
 110   1          LCD_displayString("   Smart Home   ");
 111   1          LCD_moveCursor(1, 0);
 112   1          LCD_displayString(" We Always Here ");
 113   1      }


C51 COMPILER V9.60.7.0   MAIN                                                              12/20/2024 16:53:10 PAGE 3   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    370    ----
   CONSTANT SIZE    =     89    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
